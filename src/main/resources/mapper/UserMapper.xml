<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.user.dao.UserMapper">
    <resultMap id="UserBaseInfoMap" type="com.user.model.DO.UserDO">
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="head_img_path" property="headImgPath" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="cancel_num" property="cancelNum" jdbcType="INTEGER"/>
        <result column="break_num" property="breakNum" jdbcType="INTEGER"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="User_Base_Info_List">
      user_id, user_name, email, phone,school, head_img_path,remark,gender
    </sql>

    <select id="getById" resultMap="UserBaseInfoMap">
        SELECT
        <include refid="User_Base_Info_List"/>
        FROM user
        WHERE user_id=#{userID,jdbcType=VARCHAR}
    </select>

    <select id="get" resultMap="UserBaseInfoMap" parameterType="com.user.model.DO.UserDO">
        SELECT
        <include refid="User_Base_Info_List"/>
        FROM user
        <where>
            <if test="userId != null">
                user_id=#{userId,jdbcType=VARCHAR}
            </if>
            <if test="userName != null">
                AND user_name=#{userName,jdbcType=VARCHAR}
            </if>
            <if test="password != null">
                AND password=#{password,jdbcType=VARCHAR}
            </if>
            <if test="createDate != null">
                AND create_date#{createDate,jdbcType=TIMESTAMP}
            </if>
            <if test="email != null">
                AND email=#{email,jdbcType=VARCHAR}
            </if>
            <if test="phone != null">
                AND phone=#{phone,jdbcType=VARCHAR}
            </if>
            <if test="school != null">
                AND school=#{school,jdbcType=VARCHAR}
            </if>
            <if test="realName != null">
                AND real_name=#{realName,jdbcType=VARCHAR}
            </if>
            <if test="gender != null">
                AND gender=#{gender,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="getByActivityId" resultType="java.util.Map">
        SELECT
         user.user_id userId,
         user_name userName,
         head_img_path headImgPath,
         COUNT(activity.activity_id) activityNum,
         COUNT(follow.follower_id) followNum
        FROM
          user
          LEFT JOIN activity ON activity.creator=user.user_id
          LEFT JOIN follow ON follow.star_id=user.user_id
        WHERE
          user.user_id=(SELECT creator FROM activity WHERE activity_id=#{activityId,jdbcType=VARCHAR})
        GROUP BY user.user_id
    </select>

    <delete id="delete" parameterType="java.lang.String">
        DELETE FROM
        user
        WHERE
        user_id = #{userId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.user.model.DO.UserDO">
        INSERT INTO
        user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="headImgPath != null">
                head_img_path,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="cancelNum != null">
                cancel_num,
            </if>
            <if test="breakNum != null">
                break_num,
            </if>
            <if test="gender != null">
                gender,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="headImgPath != null">
                #{headImgPath,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cancelNum != null">
                #{cancelNum,jdbcType=INTEGER},
            </if>
            <if test="breakNum != null">
                #{breakNum,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.user.model.DO.UserDO">
        UPDATE
        user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="headImgPath != null">
                head_img_path = #{headImgPath,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cancelNum != null">
                cancel_num = #{cancelNum,jdbcType=INTEGER},
            </if>
            <if test="breakNum != null">
                break_num = #{breakNum,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE user_id = #{userId,jdbcType=VARCHAR}
    </update>

    <select id="updateCancelNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        UPDATE user SET cancel_num=(
            (
              SELECT temp.cancel_num
              FROM (
                SELECT cancel_num
                FROM user
                WHERE user_id=#{userId,jdbcType=VARCHAR}
              )temp
            )
        )+1
        WHERE user_id=#{userId,jdbcType=VARCHAR}
    </select>

    <select id="updateBreakNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        UPDATE user SET break_num=(
            (
              SELECT temp.break_num
              FROM (
                SELECT break_num
                FROM user
                WHERE user_id=#{userId,jdbcType=VARCHAR}
              )temp
            )
        )+1
        WHERE user_id=#{userId,jdbcType=VARCHAR}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.society.dao.ActivityMapper">
    <resultMap id="ActivityDOMap" type="com.society.model.DO.ActivityDO">
        <id column="activity_id" property="activityId" jdbcType="VARCHAR"/>
        <result column="tag_id" property="tagId" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="theme" property="theme" jdbcType="VARCHAR"/>
        <result column="planned_num" property="plannedNum" jdbcType="INTEGER"/>
        <result column="invalided" property="invalided" jdbcType="VARCHAR"/>
        <result column="hot" property="hot" jdbcType="INTEGER"/>
        <result column="entry_start_date" property="entryStartDate" jdbcType="TIMESTAMP"/>
        <result column="entry_end_date" property="entryEndDate" jdbcType="TIMESTAMP"/>
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP"/>
        <result column="end_date" property="endDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ActivityBaseVOMap" type="com.society.model.VO.ActivityBaseVO">
        <id column="activity_id" property="activityId" jdbcType="VARCHAR"/>
        <result column="tag_id" property="tagId" jdbcType="INTEGER"/>
        <result column="tag_name" property="tagName" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="theme" property="theme" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="head_img_path" property="headImgPath" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="comment_num" property="tagId" jdbcType="INTEGER"/>
        <result column="agree_num" property="tagId" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ScheduleActivityVOMap" type="com.society.model.VO.ScheduleActivityVO">
        <id column="activity_id" property="activityId" jdbcType="VARCHAR"/>
        <result column="tag_id" property="tagId" jdbcType="INTEGER"/>
        <result column="tag_name" property="tagName" jdbcType="VARCHAR"/>
        <result column="theme" property="theme" jdbcType="VARCHAR"/>
        <result column="creator" property="userId" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="planned_num" property="plannedNum" jdbcType="INTEGER"/>
        <result column="actual_num" property="actualNum" jdbcType="INTEGER"/>
        <result column="start_date" property="startDate" jdbcType="TIMESTAMP"/>
        <result column="end_date" property="endDate" jdbcType="TIMESTAMP"/>
        <result column="invalided" property="invalided" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Activity_List">
      activity_id, tag_id, creat  e_date, creator, content, theme, planned_num,
      hot, entry_start_date, entry_end_date, start_date, end_date
    </sql>

    <sql id="Activity_Base_Info_List">
        activity.activity_id,activity.tag_id,activity.content,theme,activity.creator,
        user_name,tag_name,head_img_path,remark,
        count(comment.commentator) comment_num,
        count(agree.user_id) agree_num
    </sql>

    <select id="getAllActivity" resultMap="ActivityBaseVOMap">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>

    <select id="get" resultType="java.util.Map" parameterType="java.lang.String">
        SELECT
        activity.activity_id activityId,
        activity.tag_id tagId,
        activity.content,theme,tag_name tagName,
        planned_num plannedNum,hot,
        entry_start_date entryStartDate,
        entry_end_date entryEndDate,
        start_date startDate,
        end_date endDate,
        COUNT(comment.commentator) commentNum,
        COUNT(agree.user_id) agreeNum,
        COUNT(entry_list.user_id) actualNum
        FROM
        activity
        LEFT JOIN comment ON activity.activity_id= comment.activity_id
        LEFT JOIN agree ON activity.activity_id= agree.activity_id
        LEFT JOIN tags ON activity.tag_id= tags.tag_id
        LEFT JOIN entry_list ON activity.activity_id=entry_list.activity_id
        WHERE activity.activity_id=#{activityId,jdbcType=VARCHAR}
        GROUP BY activity.activity_id
    </select>

    <insert id="insert" parameterType="com.society.model.DO.ActivityDO" useGeneratedKeys="true"
            keyProperty="activityId">
        INSERT INTO activity
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                activity_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="theme != null">
                theme,
            </if>
            <if test="plannedNum != null">
                planned_num,
            </if>
            <if test="invalided != null">
                invalided,
            </if>
            <if test="hot != null">
                hot,
            </if>
            <if test="entryStartDate != null">
                entry_start_date,
            </if>
            <if test="entryEndDate != null">
                entry_end_date,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="activityId != null">
                #{activityId,jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="theme != null">
                #{theme,jdbcType=VARCHAR},
            </if>
            <if test="plannedNum != null">
                #{plannedNum,jdbcType=INTEGER},
            </if>
            <if test="invalided != null">
                #{invalided,jdbcType=VARCHAR},
            </if>
            <if test="hot != null">
                #{hot,jdbcType=INTEGER},
            </if>
            <if test="entryStartDate != null">
                #{entryStartDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entryEndDate != null">
                #{entryEndDate,jdbcType=TIMESTAMP},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <insert id="join">
        INSERT INTO
         entry_list
         (activity_id,user_id,create_date)
        VALUES
         (#{activityId,jdbcType=VARCHAR},
         #{userId,jdbcType=VARCHAR},
         #{createDate,jdbcType=VARCHAR})
    </insert>

    <select id="judgeJoin" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM entry_list
        WHERE user_id=#{userId,jdbcType=VARCHAR} AND activity_id=#{activityId,jdbcType=VARCHAR}
        limit 1
    </select>

    <select id="getById" resultMap="ActivityDOMap" parameterType="java.lang.String">
        SELECT * FROM activity WHERE activity_id=#{activityId,jdbcType=VARCHAR}
    </select>

    <select id="getActualNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(*)-
                (select count(*) from credit_list
                            where activity_id=#{activityId,jdbcType=VARCHAR}
                            and credit_type="1")
        FROM activity
        LEFT JOIN entry_list ON activity.activity_id=entry_list.activity_id
        WHERE activity.activity_id=#{activityId,jdbcType=VARCHAR}
        GROUP BY activity.activity_id
    </select>

    <select id="getJoinActivityByDay" resultMap="ScheduleActivityVOMap" parameterType="java.lang.String">
        SELECT
        t1.*,
        t4.tag_name,
        t5.user_name
        FROM
        (
        SELECT
        activity_id,start_date,end_date,theme,planned_num,invalided,tag_id,creator
        FROM
        activity
        WHERE
        activity_id IN (
        SELECT
        activity_id
        FROM
        entry_list
        WHERE
        user_id = #{userId,jdbcType=VARCHAR}
        )
        AND creator &lt;&gt; #{userId,jdbcType=VARCHAR}
        AND DATE_FORMAT(start_date,'%Y-%m-%d') = DATE_FORMAT(#{date,jdbcType=VARCHAR},'%Y-%m-%d')
		AND DATE_FORMAT(end_date,'%Y-%m-%d') = DATE_FORMAT(#{date1,jdbcType=VARCHAR},'%Y-%m-%d')
        ) t1
        INNER JOIN (SELECT * FROM tags) t4 ON t1.tag_id = t4.tag_id
        INNER JOIN (SELECT * FROM user) t5 ON t1.creator = t5.user_id
        ORDER BY
        t1.start_date
    </select>

    <select id="getCreateActivityByDay" resultMap="ScheduleActivityVOMap" parameterType="java.lang.String">
        SELECT
        t1.*,
        t4.tag_name,
        t5.user_name
        FROM
        (
        SELECT
        activity_id,start_date,end_date,theme,planned_num,invalided,tag_id,creator
        FROM
        activity
        WHERE creator=#{userId,jdbcType=VARCHAR}
        AND DATE_FORMAT(start_date,'%Y-%m-%d') = DATE_FORMAT(#{date,jdbcType=VARCHAR},'%Y-%m-%d')
		AND DATE_FORMAT(end_date,'%Y-%m-%d') = DATE_FORMAT(#{date1,jdbcType=VARCHAR},'%Y-%m-%d')
        ) t1
        INNER JOIN (SELECT * FROM tags) t4 ON t1.tag_id = t4.tag_id
        INNER JOIN (SELECT * FROM user) t5 ON t1.creator = t5.user_id
        ORDER BY
        t1.start_date
    </select>

    <select id="judgeByDate" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM activity
        WHERE
        activity_id IN (SELECT activity_id FROM entry_list WHERE user_id=#{userId,jdbcType=VARCHAR})
        AND((start_date &gt;= #{startDate,jdbcType=VARCHAR} AND start_date &lt;= #{endDate,jdbcType=VARCHAR})
        OR(end_date &gt;= #{startDate,jdbcType=VARCHAR} AND end_date &lt;= #{endDate,jdbcType=VARCHAR}))
        limit 1
    </select>

    <select id="getUserEmails" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT email
        FROM user
        RIGHT JOIN entry_list ON user.user_id=entry_list.user_id
        WHERE entry_list.activity_id=#{activityId,jdbcType=VARCHAR}
        AND entry_list.user_id NOT IN(
          SELECT user_id FROM credit_list WHERE activity_id=#{activityId,jdbcType=VARCHAR}
        )
    </select>

    <select id="getCreator" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT creator FROM activity WHERE activity_id=#{activityId,jdbcType=VARCHAR}
    </select>

    <update id="updateActivityInvalided" parameterType="java.lang.String">
        UPDATE activity SET invalided=#{state,jdbcType=VARCHAR}
        WHERE activity_id=#{activityId,jdbcType=VARCHAR}
    </update>

    <select id="getCreateActivityNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(*)
        FROM activity
        WHERE creator=#{userId,jdbcType=VARCHAR}
    </select>
    <select id="getJoinActivityNum" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(*) FROM entry_list WHERE user_id=#{userId,jdbcType=VARCHAR}
    </select>
    <select id="getJoinActivity" resultMap="ActivityBaseVOMap" parameterType="java.lang.String">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment ON activity.activity_id= comment.activity_id
        LEFT JOIN agree ON activity.activity_id= agree.activity_id
        LEFT JOIN user ON activity.creator= user.user_id
        LEFT JOIN tags ON activity.tag_id= tags.tag_id
        INNER JOIN entry_list ON activity.activity_id=entry_list.activity_id
        WHERE entry_list.user_id=#{userId,jdbcType=VARCHAR}
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>

    <select id="getCreateActivity" resultMap="ActivityBaseVOMap" parameterType="java.lang.String">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        WHERE activity.creator=#{userId,jdbcType=VARCHAR}
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>

    <select id="getHistoryActivity" resultMap="ActivityBaseVOMap" parameterType="java.lang.String">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        INNER JOIN history on activity.activity_id=history.activity_id
        WHERE history.user_id=#{userId,jdbcType=VARCHAR}
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>

    <select id="getCreatorEmail" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT user.email
        FROM user
        RIGHT JOIN activity ON activity.creator=user.user_id
        WHERE activity.activity_id=#{activityId,jdbcType=VARCHAR}
    </select>

    <select id="getActivityByStar" parameterType="java.lang.String" resultMap="ActivityBaseVOMap">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        WHERE activity.activity_id IN(
        select distinct activity_id from entry_list where user_id in(
        select distinct star_id from follow where follower_id=#{userId,jdbcType=VARCHAR}
        )
        )
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>
    <select id="getActivityByHobby" parameterType="java.lang.String" resultMap="ActivityBaseVOMap">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        WHERE activity.tag_id IN(
        select distinct tag_id from hobby where user_id=#{userId,jdbcType=VARCHAR}
        )
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>
    <select id="getActivityByHistory" parameterType="java.lang.String" resultMap="ActivityBaseVOMap">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        WHERE activity.tag_id IN (
        select distinct tag_id from activity where activity_id in(
        select distinct activity_id from history where user_id=#{userId,jdbcType=VARCHAR}
        and datediff(DATE_FORMAT(now(),'%Y-%m-%d'),DATE_FORMAT(create_date,'%Y-%m-%d'))&lt;=7
        )
        )
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>
    <select id="getActivityByEntry" parameterType="java.lang.String" resultMap="ActivityBaseVOMap">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        WHERE activity.tag_id IN (
        select distinct tag_id from activity where activity_id in(
        select distinct activity_id from entry_list where user_id=#{userId,jdbcType=VARCHAR}
        and datediff(DATE_FORMAT(now(),'%Y-%m-%d'),DATE_FORMAT(create_date,'%Y-%m-%d'))&lt;=7
        )
        )
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>
    <select id="getActivityBySchool" parameterType="java.lang.String" resultMap="ActivityBaseVOMap">
        SELECT
        <include refid="Activity_Base_Info_List"/>
        FROM
        activity
        LEFT JOIN comment on activity.activity_id= comment.activity_id
        LEFT JOIN agree on activity.activity_id= agree.activity_id
        LEFT JOIN user on activity.creator= user.user_id
        LEFT JOIN tags on activity.tag_id= tags.tag_id
        WHERE activity.activity_id IN(
        select distinct activity_id from activity WHERE creator IN(
        select distinct user_id from user where school=(
        select school from user where user_id=#{userId,jdbcType=VARCHAR}
        ) and school !='' and school is not null and user_id !=#{userId,jdbcType=VARCHAR}
        )
        )
        GROUP BY activity.activity_id
        ORDER BY activity.entry_start_date
    </select>
</mapper>